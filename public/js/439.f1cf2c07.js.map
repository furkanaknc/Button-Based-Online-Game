{"version":3,"file":"js/439.f1cf2c07.js","mappings":"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","sources":["webpack://client/./node_modules/core-js/internals/regexp-flags.js","webpack://client/./node_modules/core-js/modules/es.regexp.flags.js","webpack://client/./src/views/GameView.vue","webpack://client/./node_modules/engine.io-parser/build/esm/commons.js","webpack://client/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://client/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://client/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://client/./node_modules/engine.io-parser/build/esm/index.js","webpack://client/./node_modules/@socket.io/component-emitter/index.mjs","webpack://client/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://client/./node_modules/engine.io-client/build/esm/util.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://client/./node_modules/engine.io-client/build/esm/transport.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://client/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://client/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://client/./node_modules/engine.io-client/build/esm/socket.js","webpack://client/./node_modules/engine.io-client/build/esm/index.js","webpack://client/./node_modules/socket.io-client/build/esm/url.js","webpack://client/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://client/./node_modules/socket.io-parser/build/esm/binary.js","webpack://client/./node_modules/socket.io-parser/build/esm/index.js","webpack://client/./node_modules/socket.io-client/build/esm/on.js","webpack://client/./node_modules/socket.io-client/build/esm/socket.js","webpack://client/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://client/./node_modules/socket.io-client/build/esm/manager.js","webpack://client/./node_modules/socket.io-client/build/esm/index.js","webpack://client/./src/views/GameView.vue?3e8c"],"sourcesContent":["'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar global = require('../internals/global');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar regExpFlags = require('../internals/regexp-flags');\nvar fails = require('../internals/fails');\n\n// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError\nvar RegExp = global.RegExp;\nvar RegExpPrototype = RegExp.prototype;\n\nvar FORCED = DESCRIPTORS && fails(function () {\n  var INDICES_SUPPORT = true;\n  try {\n    RegExp('.', 'd');\n  } catch (error) {\n    INDICES_SUPPORT = false;\n  }\n\n  var O = {};\n  // modern V8 bug\n  var calls = '';\n  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';\n\n  var addGetter = function (key, chr) {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(O, key, { get: function () {\n      calls += chr;\n      return true;\n    } });\n  };\n\n  var pairs = {\n    dotAll: 's',\n    global: 'g',\n    ignoreCase: 'i',\n    multiline: 'm',\n    sticky: 'y'\n  };\n\n  if (INDICES_SUPPORT) pairs.hasIndices = 'd';\n\n  for (var key in pairs) addGetter(key, pairs[key]);\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var result = Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call(O);\n\n  return result !== expected || calls !== expected;\n});\n\n// `RegExp.prototype.flags` getter\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nif (FORCED) defineBuiltInAccessor(RegExpPrototype, 'flags', {\n  configurable: true,\n  get: regExpFlags\n});\n","<template>\r\n  <div class=\"game-room\" v-if=\"user\">\r\n    <div v-if=\"playerHealth > 0 && opponentHealth > 0\">\r\n      <h3>{{ playerName }}'s Health: {{ playerHealth }}</h3>\r\n      <div class=\"health-bar\">\r\n        <div class=\"health-fill\" :style=\"{ width: playerHealth + '%' }\"></div>\r\n      </div>\r\n\r\n      <h3>{{ opponentName }}'s Health: {{ opponentHealth }}</h3>\r\n\r\n      <div class=\"health-bar\">\r\n        <div class=\"health-fill opponent\" :style=\"{ width: opponentHealth + '%' }\"></div>\r\n      </div>\r\n\r\n      <div v-if=\"turn\">\r\n        <button class=\"btn btn-primary\" @click=\"handleButton1\" :disabled=\"!turn\">Basic Attack</button>\r\n        <button class=\"btn btn-warning\" @click=\"handleButton2\" :disabled=\"!turn || button2Used\">Super Attack</button>\r\n        <button class=\"btn btn-danger\" v-if=\"!specialButtonUsed\" @click=\"handleSpecialButton\">\r\n          {{ specialButtonText }}\r\n        </button>\r\n        <button class=\"btn btn-success\" @click=\"handleButton3\" :disabled=\"!turn || button3Count >= 2\">Heal</button>\r\n        <button class=\"btn btn-secondary\" @click=\"surrender\" :disabled=\"!turn\">Surrender</button>\r\n        <h2>You have {{ timeLeft }} seconds to act.</h2>\r\n      </div>\r\n      <div v-else>\r\n        <h2>Waiting for opponent's move...</h2>\r\n      </div>\r\n      <button class=\"btn btn-sound\" @click=\"toggleSound\">{{ soundOn ? 'Sound Off' : 'Sound On' }}</button>\r\n      <div class=\"mt-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header game-log-text\">Game Logs</div>\r\n          <ul class=\"list-group list-group-flush\">\r\n            <li v-for=\"log in gameLogs\" :key=\"log.id\" class=\"list-group-item game-log-list\">\r\n              <h3 id=\"game-logs\">{{ log.message }}</h3>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div v-if=\"playerHealth <= 0\">\r\n      <h1>You lost!</h1>\r\n      <router-link class=\"btn route-btn\" to=\"/\"> HOME</router-link>\r\n    </div>\r\n\r\n    <div v-if=\"opponentHealth <= 0\">\r\n      <h1>You won!</h1>\r\n      <router-link class=\"btn route-btn\" to=\"/\"> HOME</router-link>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n  <br>\r\n  <br>\r\n</template>\r\n\r\n<script>\r\nimport io from 'socket.io-client';\r\nimport { mapActions, mapGetters } from \"vuex\";\r\n\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(['user', 'userName']),\r\n    playerName() {\r\n      return this.userName\r\n    },\r\n    specialButtonText() {\r\n      switch (this.specialButton) {\r\n        case 'damage30':\r\n          return 'Damage Opponent by 30';\r\n        case 'swapHealths':\r\n          return 'Swap Health with Opponent';\r\n        case 'heal30':\r\n          return 'Heal Yourself by 30';\r\n        case 'heal50':\r\n          return 'Heal Yourself by 50'\r\n        case 'damage40':\r\n          return 'Damage Opponent by 40';\r\n        default:\r\n          return 'Use Special Move';\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      socket: null,\r\n      turn: false,\r\n      playerHealth: 100,\r\n      opponentHealth: 100,\r\n      button2Used: false,\r\n      button3Count: 0,\r\n      specialButton: '',\r\n      specialButtonUsed: false,\r\n      timer: null,\r\n      timeLeft: 5,\r\n      gameLogs: [],\r\n      logCounter: 0,\r\n      opponentName: 'Enemy',\r\n      soundOn: true,\r\n      pingSound: new Audio(require('@/assets/pingSound.mp3')),\r\n      damageSound: new Audio(require('@/assets/damageSound.mp3')),\r\n      healSound: new Audio(require('@/assets/healSound.mp3')),\r\n      swapSound: new Audio(require('@/assets/swapSound.mp3')),\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['getProfile']),\r\n    addLog(message) {\r\n      this.gameLogs.unshift({ id: this.logCounter++, message });\r\n      if (this.gameLogs.length > 10) {\r\n        this.gameLogs.pop();\r\n      }\r\n    },\r\n    connectSocket(roomId) {\r\n      this.socket = io({ withCredentials: true });\r\n      this.socket.emit('set-username', this.userName);\r\n      this.socket.emit('join-room', roomId);\r\n\r\n      this.socket.on('start-game', (data) => {\r\n        this.opponentName = data.opponentName;\r\n        this.initializeGame();\r\n      });\r\n\r\n      this.socket.on('turn', () => {\r\n        this.turn = true;\r\n        this.startTimer();\r\n      });\r\n\r\n      this.socket.on('log-message', (message) => {\r\n        this.addLog(message);\r\n      });\r\n\r\n\r\n      this.socket.on('damage-received', (damage) => {\r\n        this.playerHealth -= damage;\r\n        this.turn = false;\r\n        this.stopTimer();\r\n        if (this.soundOn) {\r\n          this.damageSound.play();\r\n        }\r\n      });\r\n\r\n      this.socket.on('healed', (health) => {\r\n        this.playerHealth += health;\r\n        this.turn = false;\r\n        this.stopTimer();\r\n      });\r\n\r\n\r\n      this.socket.on('opponent-healed', (health) => {\r\n        this.opponentHealth += health;\r\n        if (this.soundOn) {\r\n          this.healSound.play();\r\n        }\r\n      });\r\n\r\n      this.socket.on('opponent-surrendered', () => {\r\n        this.opponentHealth = 0;\r\n      });\r\n\r\n      this.socket.on('health-swapped', () => {\r\n        [this.playerHealth, this.opponentHealth] = [this.opponentHealth, this.playerHealth];\r\n        if (this.soundOn) {\r\n          this.swapSound.play();\r\n        }\r\n      });\r\n\r\n      this.socket.on('connect_error', (error) => {\r\n        console.error(\"Failed to connect:\", error);\r\n\r\n      });\r\n\r\n      this.socket.on('connect', () => {\r\n\r\n      });\r\n    },\r\n\r\n    initializeGame() {\r\n      this.assignSpecialButton();\r\n    },\r\n    toggleSound() {\r\n      this.soundOn = !this.soundOn;\r\n      if (!this.soundOn && this.pingSound) {\r\n        this.pingSound.pause();\r\n        this.pingSound.currentTime = 0;\r\n      }\r\n    },\r\n\r\n    startTimer() {\r\n      if (this.timer) clearInterval(this.timer);\r\n      this.timeLeft = 10;\r\n      this.timer = setInterval(() => {\r\n        if (this.timeLeft > 0) {\r\n          if (this.soundOn) { this.pingSound.play(); }\r\n          this.timeLeft--;\r\n        } else {\r\n          this.surrender();\r\n        }\r\n      }, 1000);\r\n    },\r\n\r\n    stopTimer() {\r\n      if (this.timer) clearInterval(this.timer);\r\n      this.timeLeft = 10;\r\n    },\r\n\r\n    randomBetween(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1) + min);\r\n    },\r\n    randomEvent() {\r\n      let randomChance = Math.random();\r\n\r\n\r\n      if (randomChance <= 0.10) {\r\n        let damageValue = this.randomBetween(1, 50);\r\n        this.socket.emit('random-damage', { damage: damageValue, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n        this.opponentHealth -= damageValue;\r\n        this.turn = false;\r\n        this.stopTimer();\r\n      } else if (randomChance <= 0.15) {\r\n        this.socket.emit('swap-health', { roomId: this.$route.params.roomId, userName: this.user.userName });\r\n        [this.playerHealth, this.opponentHealth] = [this.opponentHealth, this.playerHealth];\r\n        this.turn = false;\r\n        this.stopTimer();\r\n      } else if (randomChance <= 0.20) {\r\n        let healValue = this.randomBetween(10, 20);\r\n        this.socket.emit('random-heal', { health: healValue, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n        this.playerHealth += healValue;\r\n        this.turn = false;\r\n        this.stopTimer();\r\n      }\r\n\r\n    },\r\n    assignSpecialButton() {\r\n      const buttons = ['damage30', 'swapHealths', 'heal30', 'heal50', 'damage40'];\r\n      this.specialButton = buttons[Math.floor(Math.random() * buttons.length)];\r\n    },\r\n\r\n    handleSpecialButton() {\r\n      if (!this.specialButton || this.specialButtonUsed) {\r\n        console.log(\"Special button not assigned or already used.\");\r\n        return;\r\n      }\r\n\r\n      const specialActions = {\r\n        'damage30': () => {\r\n          this.opponentHealth -= 30;\r\n          this.socket.emit('damage', { damage: 30, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n          this.turn = false;\r\n          this.stopTimer();\r\n        },\r\n        'swapHealths': () => {\r\n          const tempHealth = this.playerHealth;\r\n          this.playerHealth = this.opponentHealth;\r\n          this.opponentHealth = tempHealth;\r\n          this.socket.emit('swap-health', { roomId: this.$route.params.roomId, userName: this.user.userName });\r\n          this.startTimer();\r\n\r\n        },\r\n        'heal30': () => {\r\n          this.socket.emit('heal', { health: 30, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n          this.stopTimer();\r\n        },\r\n        'heal50': () => {\r\n          this.socket.emit('heal', { health: 50, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n          this.stopTimer();\r\n        },\r\n        'damage40': () => {\r\n          this.opponentHealth -= 40;\r\n          this.socket.emit('damage', { damage: 40, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n          this.turn = false;\r\n          this.stopTimer();\r\n        }\r\n      };\r\n\r\n      if (specialActions[this.specialButton]) {\r\n        console.log(`Executing special action: ${this.specialButton}`);\r\n        specialActions[this.specialButton]();\r\n        this.specialButtonUsed = true;\r\n\r\n      }\r\n    },\r\n\r\n\r\n    button1() {\r\n      const damage = this.randomBetween(1, 10);\r\n      this.socket.emit('damage', { damage, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n      this.opponentHealth -= damage;\r\n      this.turn = false;\r\n      this.stopTimer();\r\n      //this.addLog(`${this.playerName} damaged for ${damage} points.`);\r\n\r\n    },\r\n\r\n    button2() {\r\n      const damage = this.randomBetween(10, 50);\r\n      this.socket.emit('damage', { damage, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n      this.opponentHealth -= damage;\r\n      this.button2Used = true;\r\n      this.turn = false;\r\n      this.stopTimer();\r\n      //this.addLog(`${this.playerName} damaged for ${damage} points.`);\r\n\r\n\r\n    },\r\n\r\n    button3() {\r\n      const health = this.randomBetween(20, 30);\r\n      const effectiveHeal = Math.min(100 - this.playerHealth, health); // Don't allow health to exceed 100\r\n      this.socket.emit('heal', { health: effectiveHeal, roomId: this.$route.params.roomId, userName: this.user.userName });\r\n      // this.playerHealth += effectiveHeal;\r\n      this.button3Count++;\r\n      this.turn = false;\r\n      this.stopTimer();\r\n      //this.addLog(`${this.playerName} healed for ${health} points.`);\r\n\r\n    },\r\n\r\n    surrender() {\r\n      const roomId = this.$route.params.roomId;\r\n      this.socket.emit('surrender', { roomId, userName: this.user.userName });\r\n      this.playerHealth = 0;\r\n      this.turn = false;\r\n      this.stopTimer();\r\n    },\r\n\r\n    handleButton1() {\r\n      this.randomEvent();\r\n      this.button1();\r\n    },\r\n    handleButton2() {\r\n      this.randomEvent();\r\n      this.button2();\r\n    },\r\n    handleButton3() {\r\n      this.randomEvent();\r\n      this.button3();\r\n    },\r\n\r\n  },\r\n  async created() {\r\n    await this.getProfile();\r\n    const roomId = this.$route.params.roomId;\r\n    this.connectSocket(roomId);\r\n    document.body.style.backgroundColor = '#93B1A6';\r\n  },\r\n  beforeUnmount() {\r\n    this.pingSound.pause();\r\n    this.pingSound.currentTime = 0;\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n      this.timer = null;\r\n    }\r\n\r\n    if (this.socket) this.socket.disconnect();\r\n    document.body.style.backgroundColor = ''\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.health-bar {\r\n  width: 100%;\r\n  height: 20px;\r\n  background-color: #ddd;\r\n  margin: 10px 0;\r\n  border-radius: 10px;\r\n}\r\n\r\n.health-fill {\r\n  height: 100%;\r\n  background-color: green;\r\n  transition: width 0.5s ease;\r\n  border-radius: 10px;\r\n}\r\n\r\n.health-fill.opponent {\r\n  background-color: red;\r\n}\r\n\r\n.route-btn,\r\n.btn-sound {\r\n  background-color: #183D3D;\r\n  color: #fff;\r\n}\r\n\r\n.route-btn:hover,\r\n.btn-sound:hover {\r\n  background-color: #255757;\r\n}\r\n\r\n.btn {\r\n  width: 200px;\r\n  gap: 50px;\r\n  margin: 10px;\r\n}\r\n\r\n.game-log-list {\r\n  background-color: #183D3D;\r\n  color: #fff;\r\n}\r\n\r\n.game-log-text {\r\n  background-color: #5C8374;\r\n  color: #fff;\r\n}\r\n</style>\r\n\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { render } from \"./GameView.vue?vue&type=template&id=06b74b1d&scoped=true\"\nimport script from \"./GameView.vue?vue&type=script&lang=js\"\nexport * from \"./GameView.vue?vue&type=script&lang=js\"\n\nimport \"./GameView.vue?vue&type=style&index=0&id=06b74b1d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-06b74b1d\"]])\n\nexport default __exports__"],"names":["anObject","module","exports","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","DESCRIPTORS","defineBuiltInAccessor","regExpFlags","fails","RegExp","RegExpPrototype","prototype","FORCED","INDICES_SUPPORT","error","O","calls","expected","addGetter","key","chr","Object","defineProperty","get","pairs","getOwnPropertyDescriptor","call","configurable","class","_createElementVNode","_hoisted_11","id","_ctx","user","_createElementBlock","_hoisted_1","$data","playerHealth","opponentHealth","_hoisted_2","_toDisplayString","$options","playerName","_hoisted_3","style","_normalizeStyle","width","opponentName","_hoisted_4","turn","_hoisted_5","onClick","_cache","args","handleButton1","disabled","_hoisted_6","handleButton2","button2Used","_hoisted_7","specialButtonUsed","handleSpecialButton","specialButtonText","handleButton3","button3Count","_hoisted_8","surrender","_hoisted_9","timeLeft","_hoisted_10","_hoisted_12","toggleSound","soundOn","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_Fragment","_renderList","gameLogs","log","_hoisted_17","message","_hoisted_18","_hoisted_19","_createVNode","_component_router_link","to","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","Array","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","encodeURIComponent","qs","qry","pair","decodeURIComponent","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","alphabet","map","prev","seed","num","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","name","poll","total","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","assign","Request","req","method","xhrStatus","pollXhr","undefined","_a","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","options","compress","perMessageDeflate","Buffer","threshold","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","test","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","computed","mapGetters","userName","specialButton","logCounter","pingSound","Audio","require","damageSound","healSound","swapSound","methods","mapActions","addLog","connectSocket","roomId","initializeGame","startTimer","damage","stopTimer","play","health","console","assignSpecialButton","currentTime","clearInterval","setInterval","randomBetween","randomEvent","randomChance","damageValue","$route","params","healValue","buttons","specialActions","damage30","swapHealths","tempHealth","heal30","heal50","damage40","button1","button2","button3","effectiveHeal","created","getProfile","body","backgroundColor","beforeUnmount","__exports__","render"],"sourceRoot":""}